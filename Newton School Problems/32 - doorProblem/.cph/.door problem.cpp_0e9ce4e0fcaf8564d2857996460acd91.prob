{"name":"Local: door problem","url":"i:\\Door Problem\\door problem.cpp","tests":[{"id":1663854213778,"input":"#include<iostream>\n#include<queue>\n#define long  long int\nusing namespace std;\n\n\nvoid doorProblem(long *t,int *op,long N){\n    long *ans=new long[N];\n    for (long i = 0; i < N; i++)\n    {\n        ans[i]=0;\n    }\n    \n\n    int i=0;bool prev=1;\n    queue<int> Enter,Exit;\n\n    while (true)    \n    {\n        long time;\n        if(i<N) time=t[i];\n        while(t[i]==time && i<N){\n            if(op[i]==1){\n                Exit.push(i);\n            }else Enter.push(i);\n            i++;\n        }\n        \n        // cout<<i<<endl;\n        while((!Enter.empty() || !Exit.empty()) && (i!=N) && time<t[i]){\n            if(prev==0 && time<t[i] && !Exit.empty() && Enter.empty()){\n                prev=1;\n            }\n            \n            while(prev==1 && !Exit.empty() && time<t[i]){\n                \n                ans[Exit.front()]=time++;\n                Exit.pop();\n            }\n            \n            if(time<t[i] && !Enter.empty()){\n                prev=0;\n            }\n            // cout<<t[i]<<\" time \"<<time<<\" \"<<\" prev \"<<prev<<\" Enter \"<<Enter.empty()<<\" Exit \"<<Exit.empty()<<endl;\n            // \n            while(prev==0 && !Enter.empty() && time<t[i]){\n                \n                ans[Enter.front()]=time++;\n                Enter.pop();\n            }\n\n            if(Enter.empty() && Exit.empty()  && i<N && (t[i]-time)>0){\n                prev=1;\n            }\n        }\n        // cout<<i<<endl;\n        //for last element\n        if(i==N){\n            // break;\n            if(prev==0 && !Exit.empty() && Enter.empty()){\n                prev=1;\n            }\n            // cout<<prev<<\"  \"<<Exit.empty()<<endl;\n            while(prev==1 && !Exit.empty()){\n                ans[Exit.front()]=time++;\n                \n                Exit.pop();\n            }\n            \n            if(prev==1 && !Enter.empty() && Exit.empty()){\n                prev=0;\n            }\n            // cout<<\"  \"<<Enter.empty()<<endl;\n            // cout<<t[i]<<\" time \"<<time<<\" \"<<\" prev \"<<prev<<\" Enter \"<<Enter.empty()<<\" Exit \"<<Exit.empty()<<endl;\n            // \n            while(prev==0 && !Enter.empty()){\n                \n                ans[Enter.front()]=time++;\n                Enter.pop();\n            }\n            // cout<<prev<<\"  \"<<Enter.empty()<<endl;\n            // break;\n            \n        }\n        \n        // cout<<i<<endl;\n        if(Enter.empty() && Exit.empty() && i==N){\n            break;\n        }\n\n    }\n    \n\n    for (i = 0; i <N; i++)\n    {\n        cout<<ans[i]<<\" \";\n    }cout<<endl;\n    // return ans;\n}\n\n\nint main(){\n\n    // using namespace std;\n\n    long N;cin>>N;\n    long time[N];\n    int operations[N];\n    for(int i=0;i<N;i++){\n        cin>>time[i];\n    }\n    for (int i = 0; i <N; i++)\n    {\n        cin>>operations[i];\n    }\n    doorProblem(time,operations,N);\n}","output":""}],"interactive":false,"memoryLimit":1024,"timeLimit":3000,"srcPath":"i:\\Door Problem\\door problem.cpp","group":"local","local":true}